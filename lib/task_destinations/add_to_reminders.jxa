#!/usr/bin/env osascript -l JavaScript
/*
  Copyright 2009, David Martinez

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/
const VERBOSE = false

function run(input, params) {
	'use strict';

	var strPath = input[0]
	if (VERBOSE) { 	console.log("Path:"+strPath) }
	var nsjira_report = $.NSString.stringWithContentsOfFile(strPath)
	var jira_report = ObjC.unwrap(nsjira_report)
	var report_json = JSON.parse(jira_report)

	var completed_stati = report_json['completed_stati']
	if (VERBOSE) { console.log("Completed stati:"+completed_stati) }
  var app_params     = report_json['task_app_params']
	var target_project = app_params['project_name']

	var TaskApp = Application("Reminders")
	TaskApp.includeStandardAdditions = true
	if (VERBOSE) { 	console.log("Setting target project: "+target_project) }
	var reminders_list = TaskApp.lists.byName(target_project)
	reminders_list.name() // To force an exception that we can see.
	if (VERBOSE) { console.log("Setting target project: "+reminders_list.name()) }

	for (var i = report_json['results'].length - 1; i >= 0; i--) {
		var row = report_json['results'][i]
		var task_name = row['task_name']
		var task_notes = row['task_notes']
		var task_status     = row['status']
		var task_flags = row['task_flags']
		if (VERBOSE) { console.log("Task: "+task_name) }
		var reminders_task = reminders_list.reminders.byName(task_name)
		try {
			var reminder_name = reminders_task.name()
			if (VERBOSE) { console.log("Found task: and it's completed? "+reminders_task.completed()+". Setting status to "+task_status) }
			if (completed_stati.indexOf(task_status)) {
				if (VERBOSE) { console.log("Marking Done") }
				reminders_task.completed = true
			}
		} catch (err) {
			if (VERBOSE) { console.log("No task Found. "+err.message+". Adding it..") }
			var toDo = TaskApp.Reminder({name: task_name, body: task_notes})
			if (VERBOSE) { console.log("New Reminders ToDo:"+toDo) }
			reminders_list.reminders.push(toDo)
			// Not found, keep going.
		}
	}

	console.log("Finished updating "+report_json['results'].length+" tasks in Reminders.")

}

