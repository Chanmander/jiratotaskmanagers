#!/usr/bin/env osascript -l JavaScript
const VERBOSE=false

function run(input, params) {
	'use strict';

	var strPath = input[0]
	if (VERBOSE) { 	console.log("Path:"+strPath) }
	if (! strPath) {
		strPath = "/var/folders/_n/f5hy2pcd53v1jsm0ylh5s3y40000gn/T/jira-tasks20150627-30890-1fl331j"
	}
	var nsjira_report = $.NSString.stringWithContentsOfFile(strPath)
	var jira_report = ObjC.unwrap(nsjira_report)
	var report_json = JSON.parse(jira_report)
	
	var completed_stati = report_json['completed_stati']
	if (VERBOSE) { console.log("Completed stati:"+completed_stati) }
	var target_project = report_json['default_project']

	var Things = Application("Things")
	Things.includeStandardAdditions = true
	if (VERBOSE) { 	console.log("Setting target project: "+target_project) }
	var things_project = Things.projects.byName(target_project)
	things_project.name() // To force an exception that we can see.
	if (VERBOSE) { console.log("Setting target project: "+things_project.name()) }

	var things_tasks = Things.toDos

	for (var i = report_json['results'].length - 1; i >= 0; i--) {
		var row = report_json['results'][i]
		var task_name = row['task_name']
		var task_notes = row['task_notes']
		var task_status     = row['status']
		var task_flags = row['task_flags']
		if (VERBOSE) { console.log("Task: "+task_name) }
		var things_task = things_tasks.byName(task_name)
		try {
			var things_name = things_task.name()
			if (VERBOSE) { console.log("Found task: and it's "+things_task.status()+". Setting status to "+task_status) }
			if (completed_stati.indexOf(task_status)) {
				if (VERBOSE) { console.log("Marking Done") }
				things_task.status('completed')
			}
		} catch (err) {
			if (VERBOSE) { console.log("No task Found. "+err.message+". Adding it..") }
			var toDo = Things.ToDo({name: task_name, notes: task_notes, project: things_project})
			if (VERBOSE) { console.log("New Things ToDo:"+toDo) }
			Things.toDos.push(toDo)
			// Not found, keep going.
		}
	}

	console.log("Finished updating "+report_json['results'].length+" tasks in Things.")
	
}

